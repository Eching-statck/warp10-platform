//
//   Copyright 2019-2023  SenX S.A.S.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//

/////////////////////////////////////////////////////////////////////////////////////////
//
// E G R E S S
//
/////////////////////////////////////////////////////////////////////////////////////////

###
### M A N D A T O R Y   C O N F I G U R A T I O N
###

##
## Path to the FoundationDB cluster file. This file needs to be readable AND writable by the
## user running the Egress instance.
##
egress.fdb.clusterfile = ${fdb.clusterfile}

##
## MANDATORY - Host onto which the egress server should listen
##
egress.host = 127.0.0.1

##
## MANDATORY - Port onto which the egress server should listen
##
egress.port = 8881

##
## MANDATORY - Number of acceptors
##
egress.acceptors = 2

##
## MANDATORY - Number of selectors
##
egress.selectors = 8

##
## MANDATORY - Idle timeout (in ms)
##
egress.idle.timeout = 300000

##
## MANDATORY - ZooKeeper server list, to discover Directory services
##
egress.zk.quorum = ${zk.quorum}

##
## Number of GTS to batch when retrieving datapoints
##
egress.fetch.batchsize = 10000

###
### O P T I O N A L   C O N F I G U R A T I O N
###
### Values shown are the default when they exist
###

##
## Optional FoundationDB tenant to use.
## The tenant MUST exist.
##
#egress.fdb.tenant =

##
## Optional FoundationDB tenant prefix to use
## Format is either OPB64 or hex:<HEXA>
##
#egress.fdb.tenant.prefix =



##
## Size of FoundationDB Database shared pool used to retrieve data, defaults to 1
## Note that the Database objects in this pool are not accessed in an exclusive way, so the
## poolsize does not directly control the level of concurrency for accesses to FoundationDB
##
#egress.fdb.poolsize = 1

##
## Number of threads to use for scheduling parallel scanners. Use 0 to disable parallel scanners
##
#egress.fdb.parallelscanners.poolsize = 0

##
## Maximum number of parallel scanners per fetch request. Use 0 to disable parallel scanners.
##
#egress.fdb.parallelscanners.maxinflightperrequest = 0

##
## Minimum number of GTS to assign to a parallel scanner. If the number of GTS to fetch is below this limit, no
## parallel scanners will be spawned. Defaults to 4.
##
#egress.fdb.parallelscanners.min.gts.perscanner = 4
 
##
## Maximum number of parallel scanners to use when fetching datapoints for a batch of GTS (see EGRESS_FETCH_BATCHSIZE).
## Defaults to 16.
##
#egress.fdb.parallelscanners.max.parallel.scanners = 16

##
## Number of threads in Jetty's Thread Pool - defaults to 200
##
#egress.jetty.threadpool = 200
  
##
## Maximum size of Jetty ThreadPool queue size (unbounded by default)
##
#egress.jetty.maxqueuesize = 

##
## TCP Backlog applied to the egress server listener
##
#egress.tcp.backlog = 0

##
## 128/192/256 bits AES key for encrypting data in FoundationDB.
## Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
##
#egress.fdb.data.aes = ${fdb.data.aes}

##
## Should the egress exec handler expose its store/directory clients?
##
#egress.clients.expose = false

##
## 128/192/256 bits AES key for encrypting GTSSplit instances.
## Valid formats are hex:..., base64:... or, when using OSS, wrapped:....
##
#egress.fetcher.aes = hex:hhhhhh...

##
## Maximum age of a valid GTSSplit (in ms)
##
#egress.fetcher.maxsplitage = 

##
## Maximum execution time of requests to the /exec endpoint (in ms).
## This value may be overriden by specifying a token with the capability specified in
## warpscript.timebox.maxtime.capname set to a limit in ms and passing this token in
## the X-Warp10-Capabilities header.
## By default the maximum execution time is not bounded.
##
#egress.maxtime = 1000

##
## Maximum validity of runner nonces (in ms). Runner scripts are submitted to the /exec endpoint
## with the header X-Warp10-Runner-Nonce set to a nonce containing the time of execution in ns since
## the epoch. If the nonce is correct and less than this many ms in the past, the time boxing is
## waived for the execution.
## The default value if 1000 ms
##
#egress.runner.nonce.validity = 1000

##
## Set to true to only process directory queries when shards covering all partitions are available
##
#egress.directory.shards.strict = true

##
## Set to true to fail directory queries when accessing a shard produced an error
##
#egress.directory.shards.failonerror = true
